{"version":3,"names":["_react","_interopRequireDefault","require","usePropsErrorBoundary","props","React","useEffect","defaultIndex","viewCount","dataLength","Error","mode","vertical","width","height"],"sources":["usePropsErrorBoundary.ts"],"sourcesContent":["import React from \"react\";\n\nimport type { TCarouselProps } from \"../types\";\n\nexport function usePropsErrorBoundary(props: TCarouselProps & { dataLength: number }) {\n  React.useEffect(() => {\n    const { defaultIndex, dataLength: viewCount } = props;\n\n    if (typeof defaultIndex === \"number\" && viewCount > 0) {\n      if (defaultIndex < 0 || defaultIndex >= viewCount) {\n        throw new Error(\n          \"DefaultIndex must be in the range of data length.\",\n        );\n      }\n    }\n\n    // TODO\n    if (!props.mode || props.mode === \"parallax\") {\n      if (!props.vertical && !props.width) {\n        throw new Error(\n          \"`width` must be specified for horizontal carousels.\",\n        );\n      }\n      if (props.vertical && !props.height) {\n        throw new Error(\n          \"`height` must be specified for vertical carousels.\",\n        );\n      }\n    }\n  }, [props]);\n}\n"],"mappings":"gMAAA,IAAAA,MAAA,CAAAC,sBAAA,CAAAC,OAAA,WAIO,QAAS,CAAAC,qBAAqBA,CAACC,KAA8C,CAAE,CACpFC,cAAK,CAACC,SAAS,CAAC,UAAM,CACpB,GAAQ,CAAAC,YAAY,CAA4BH,KAAK,CAA7CG,YAAY,CAAcC,SAAS,CAAKJ,KAAK,CAA/BK,UAAU,CAEhC,GAAI,MAAO,CAAAF,YAAY,GAAK,QAAQ,EAAIC,SAAS,CAAG,CAAC,CAAE,CACrD,GAAID,YAAY,CAAG,CAAC,EAAIA,YAAY,EAAIC,SAAS,CAAE,CACjD,KAAM,IAAI,CAAAE,KAAK,CACb,mDAAmD,CACpD,CACH,CACF,CAGA,GAAI,CAACN,KAAK,CAACO,IAAI,EAAIP,KAAK,CAACO,IAAI,GAAK,UAAU,CAAE,CAC5C,GAAI,CAACP,KAAK,CAACQ,QAAQ,EAAI,CAACR,KAAK,CAACS,KAAK,CAAE,CACnC,KAAM,IAAI,CAAAH,KAAK,CACb,qDAAqD,CACtD,CACH,CACA,GAAIN,KAAK,CAACQ,QAAQ,EAAI,CAACR,KAAK,CAACU,MAAM,CAAE,CACnC,KAAM,IAAI,CAAAJ,KAAK,CACb,oDAAoD,CACrD,CACH,CACF,CACF,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CACb"}