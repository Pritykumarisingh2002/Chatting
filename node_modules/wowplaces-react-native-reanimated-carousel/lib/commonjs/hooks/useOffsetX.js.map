{"version":3,"names":["_reactNativeReanimated","require","_worklet_63816918029_init_data","code","location","sourceMap","useOffsetX","opts","visibleRanges","handlerOffset","index","size","loop","dataLength","_opts$type","type","_viewCount","viewCount","ITEM_LENGTH","VALID_LENGTH","TOTAL_WIDTH","HALF_WIDTH","Math","round","positiveCount","startPos","MAX","MIN","x","useDerivedValue","_e","global","Error","_f","_visibleRanges$value","value","negativeRange","positiveRange","Number","MAX_SAFE_INTEGER","inputRange","MIN_VALUE","outputRange","interpolate","Extrapolate","CLAMP","_closure","__initData","__workletHash","__stackDetails","__version","exports"],"sources":["useOffsetX.ts"],"sourcesContent":["import type Animated from \"react-native-reanimated\";\nimport {\n  Extrapolate,\n  interpolate,\n  useDerivedValue,\n} from \"react-native-reanimated\";\n\nimport type { IVisibleRanges } from \"./useVisibleRanges\";\n\nexport interface IOpts {\n  index: number\n  size: number\n  handlerOffset: Animated.SharedValue<number>\n  dataLength: number\n  type?: \"positive\" | \"negative\"\n  viewCount?: number\n  loop?: boolean\n}\n\nexport const useOffsetX = (opts: IOpts, visibleRanges: IVisibleRanges) => {\n  const {\n    handlerOffset,\n    index,\n    size,\n    loop,\n    dataLength,\n    type = \"positive\",\n    viewCount: _viewCount,\n  } = opts;\n\n  const ITEM_LENGTH = dataLength;\n  const VALID_LENGTH = ITEM_LENGTH - 1;\n  const TOTAL_WIDTH = size * ITEM_LENGTH;\n  const HALF_WIDTH = 0.5 * size;\n\n  const viewCount = _viewCount ?? Math.round((ITEM_LENGTH - 1) / 2);\n  const positiveCount\n        = type === \"positive\" ? viewCount : VALID_LENGTH - viewCount;\n\n  let startPos = size * index;\n  if (index > positiveCount)\n    startPos = (index - ITEM_LENGTH) * size;\n\n  const MAX = positiveCount * size;\n  const MIN = -((VALID_LENGTH - positiveCount) * size);\n\n  const x = useDerivedValue(() => {\n    const { negativeRange, positiveRange } = visibleRanges.value;\n    if (\n      (index < negativeRange[0] || index > negativeRange[1])\n            && (index < positiveRange[0] || index > positiveRange[1])\n    )\n      return Number.MAX_SAFE_INTEGER;\n\n    if (loop) {\n      const inputRange = [\n        -TOTAL_WIDTH,\n        MIN - HALF_WIDTH - startPos - Number.MIN_VALUE,\n        MIN - HALF_WIDTH - startPos,\n        0,\n        MAX + HALF_WIDTH - startPos,\n        MAX + HALF_WIDTH - startPos + Number.MIN_VALUE,\n        TOTAL_WIDTH,\n      ];\n\n      const outputRange = [\n        startPos,\n        MAX + HALF_WIDTH - Number.MIN_VALUE,\n        MIN - HALF_WIDTH,\n        startPos,\n        MAX + HALF_WIDTH,\n        MIN - HALF_WIDTH + Number.MIN_VALUE,\n        startPos,\n      ];\n\n      return interpolate(\n        handlerOffset.value,\n        inputRange,\n        outputRange,\n        Extrapolate.CLAMP,\n      );\n    }\n\n    return handlerOffset.value + size * index;\n  }, [loop, dataLength, viewCount, type, size, visibleRanges]);\n\n  return x;\n};\n"],"mappings":"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"}