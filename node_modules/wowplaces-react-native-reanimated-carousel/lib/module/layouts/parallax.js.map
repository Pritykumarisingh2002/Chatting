{"version":3,"names":["Extrapolate","interpolate","parallaxLayout","baseConfig","modeConfig","arguments","length","undefined","size","vertical","parallaxScrollingOffset","parallaxScrollingScale","parallaxAdjacentItemScale","value","translate","zIndex","CLAMP","scale","transform","translateY","translateX"],"sources":["parallax.ts"],"sourcesContent":["import { Extrapolate, interpolate } from \"react-native-reanimated\";\n\nimport type { IComputedDirectionTypes } from \"../types\";\n\ninterface TBaseConfig {\n  size: number\n  vertical: boolean\n}\n\nexport interface ILayoutConfig {\n  /**\n     * control prev/next item offset.\n     * @default 100\n     */\n  parallaxScrollingOffset?: number\n  /**\n     * control prev/current/next item offset.\n     * @default 0.8\n     */\n  parallaxScrollingScale?: number\n  /**\n     * control prev/next item offset.\n     * @default Math.pow(parallaxScrollingScale, 2)\n     */\n  parallaxAdjacentItemScale?: number\n}\n\nexport type TParallaxModeProps = IComputedDirectionTypes<{\n  /**\n     * Carousel Animated transitions.\n     */\n  mode?: \"parallax\"\n  modeConfig?: ILayoutConfig\n}>;\n\nexport function parallaxLayout(\n  baseConfig: TBaseConfig,\n  modeConfig: ILayoutConfig = {},\n) {\n  const { size, vertical } = baseConfig;\n  const {\n    parallaxScrollingOffset = 100,\n    parallaxScrollingScale = 0.8,\n    parallaxAdjacentItemScale = parallaxScrollingScale ** 2,\n  } = modeConfig;\n\n  return (value: number) => {\n    \"worklet\";\n    const translate = interpolate(\n      value,\n      [-1, 0, 1],\n      [-size + parallaxScrollingOffset, 0, size - parallaxScrollingOffset],\n    );\n\n    const zIndex = interpolate(\n      value,\n      [-1, 0, 1],\n      [0, size, 0],\n      Extrapolate.CLAMP,\n    );\n\n    const scale = interpolate(\n      value,\n      [-1, 0, 1],\n      [\n        parallaxAdjacentItemScale,\n        parallaxScrollingScale,\n        parallaxAdjacentItemScale,\n      ],\n      Extrapolate.CLAMP,\n    );\n\n    return {\n      transform: [\n        vertical\n          ? {\n            translateY: translate,\n          }\n          : {\n            translateX: translate,\n          },\n        {\n          scale,\n        },\n      ],\n      zIndex,\n    };\n  };\n}\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,yBAAyB;AAmClE,OAAO,SAASC,cAAcA,CAC5BC,UAAuB,EAEvB;EAAA,IADAC,UAAyB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAE9B,MAAM;IAAEG,IAAI;IAAEC;EAAS,CAAC,GAAGN,UAAU;EACrC,MAAM;IACJO,uBAAuB,GAAG,GAAG;IAC7BC,sBAAsB,GAAG,GAAG;IAC5BC,yBAAyB,GAAGD,sBAAsB,IAAI;EACxD,CAAC,GAAGP,UAAU;EAEd,OAAQS,KAAa,IAAK;IACxB,SAAS;;IACT,MAAMC,SAAS,GAAGb,WAAW,CAC3BY,KAAK,EACL,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,CAACL,IAAI,GAAGE,uBAAuB,EAAE,CAAC,EAAEF,IAAI,GAAGE,uBAAuB,CAAC,CACrE;IAED,MAAMK,MAAM,GAAGd,WAAW,CACxBY,KAAK,EACL,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,CAAC,EAAEL,IAAI,EAAE,CAAC,CAAC,EACZR,WAAW,CAACgB,KAAK,CAClB;IAED,MAAMC,KAAK,GAAGhB,WAAW,CACvBY,KAAK,EACL,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CACED,yBAAyB,EACzBD,sBAAsB,EACtBC,yBAAyB,CAC1B,EACDZ,WAAW,CAACgB,KAAK,CAClB;IAED,OAAO;MACLE,SAAS,EAAE,CACTT,QAAQ,GACJ;QACAU,UAAU,EAAEL;MACd,CAAC,GACC;QACAM,UAAU,EAAEN;MACd,CAAC,EACH;QACEG;MACF,CAAC,CACF;MACDF;IACF,CAAC;EACH,CAAC;AACH"}