{"version":3,"names":["React","Animated","Extrapolate","interpolate","runOnJS","useAnimatedReaction","useAnimatedStyle","useOffsetX","LazyView","ParallaxLayout","props","handlerOffset","parallaxScrollingOffset","parallaxScrollingScale","parallaxAdjacentItemScale","index","width","height","loop","dataLength","children","visibleRanges","vertical","shouldUpdate","setShouldUpdate","useState","size","x","offsetXStyle","value","translate","EXTEND","zIndex","CLAMP","scale","transform","translateY","translateX","updateView","useCallback","negativeRange","positiveRange","createElement","View","style","position"],"sources":["ParallaxLayout.tsx"],"sourcesContent":["import React from \"react\";\nimport Animated, {\n  Extrapolate,\n  interpolate,\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedStyle,\n} from \"react-native-reanimated\";\n\nimport type { ILayoutConfig } from \"./parallax\";\n\nimport { useOffsetX } from \"../hooks/useOffsetX\";\nimport type { IVisibleRanges } from \"../hooks/useVisibleRanges\";\nimport { LazyView } from \"../LazyView\";\nimport type { IComputedDirectionTypes } from \"../types\";\n\nexport const ParallaxLayout: React.FC<\nIComputedDirectionTypes<\n{\n  loop?: boolean\n  handlerOffset: Animated.SharedValue<number>\n  index: number\n  dataLength: number\n  visibleRanges: IVisibleRanges\n} & ILayoutConfig\n>\n> = (props) => {\n  const {\n    handlerOffset,\n    parallaxScrollingOffset = 100,\n    parallaxScrollingScale = 0.8,\n    parallaxAdjacentItemScale = parallaxScrollingScale ** 2,\n    index,\n    width,\n    height,\n    loop,\n    dataLength,\n    children,\n    visibleRanges,\n    vertical,\n  } = props;\n\n  const [shouldUpdate, setShouldUpdate] = React.useState(false);\n\n  const size = props.vertical ? props.height : props.width;\n\n  const x = useOffsetX(\n    {\n      handlerOffset,\n      index,\n      size,\n      dataLength,\n      loop,\n    },\n    visibleRanges,\n  );\n\n  const offsetXStyle = useAnimatedStyle(() => {\n    const value = x.value / size;\n\n    const translate = interpolate(\n      value,\n      [-1, 0, 1],\n      [\n        -size + parallaxScrollingOffset,\n        0,\n        size - parallaxScrollingOffset,\n      ],\n      Extrapolate.EXTEND,\n    );\n\n    const zIndex = interpolate(\n      value,\n      [-1, 0, 1],\n      [0, size, 0],\n      Extrapolate.CLAMP,\n    );\n\n    const scale = interpolate(\n      value,\n      [-1, 0, 1],\n      [\n        parallaxAdjacentItemScale,\n        parallaxScrollingScale,\n        parallaxAdjacentItemScale,\n      ],\n      Extrapolate.CLAMP,\n    );\n\n    return {\n      transform: [\n        vertical\n          ? {\n            translateY: translate,\n          }\n          : {\n            translateX: translate,\n          },\n        {\n          scale,\n        },\n      ],\n      zIndex,\n    };\n  }, [loop, vertical, parallaxScrollingOffset]);\n\n  const updateView = React.useCallback(\n    (negativeRange: number[], positiveRange: number[]) => {\n      setShouldUpdate(\n        (index >= negativeRange[0] && index <= negativeRange[1])\n                    || (index >= positiveRange[0] && index <= positiveRange[1]),\n      );\n    },\n    [index],\n  );\n\n  useAnimatedReaction(\n    () => visibleRanges.value,\n    () => {\n      runOnJS(updateView)(\n        visibleRanges.value.negativeRange,\n        visibleRanges.value.positiveRange,\n      );\n    },\n    [visibleRanges.value],\n  );\n\n  return (\n    <Animated.View\n      style={[\n        {\n          width: width || \"100%\",\n          height: height || \"100%\",\n          position: \"absolute\",\n        },\n        offsetXStyle,\n      ]}\n    >\n      <LazyView shouldUpdate={shouldUpdate}>{children}</LazyView>\n    </Animated.View>\n  );\n};\n"],"mappings":"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"}