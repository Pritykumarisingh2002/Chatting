{"version":3,"names":["React","PanGestureHandler","Animated","cancelAnimation","measure","runOnJS","useAnimatedGestureHandler","useAnimatedReaction","useAnimatedRef","useDerivedValue","useSharedValue","withDecay","Easing","CTX","dealWithAnimation","IScrollViewGesture","props","vertical","pagingEnabled","snapEnabled","panGestureHandlerProps","loop","infinite","scrollAnimationDuration","withAnimation","enabled","dataLength","overscrollEnabled","marginOffset","useContext","size","translation","testID","style","onScrollBegin","onScrollEnd","onTouchBegin","onTouchEnd","maxPage","isHorizontal","touching","scrollEndTranslation","scrollEndVelocity","containerRef","getLimit","useCallback","width","containerWidth","withSpring","toValue","onFinished","defaultWithAnimation","type","config","duration","easing","easeOutQuart","isFinished","endWithSpring","origin","value","velocity","finalTranslation","deceleration","offset","computed","Math","ceil","floor","page","finalPage","withProcessTranslation","min","max","nextPage","round","limit","sign","abs","onFinish","activeDecay","resetBoundary","panGestureEventHandler","onStart","_","ctx","validStart","panOffset","onActive","e","translationX","translationY","panTranslation","boundary","fixed","dynamic","translationValue","onEnd","velocityX","velocityY","createElement","_extends","onGestureEvent","View","ref","onTouchStart","children","ScrollViewGesture"],"sources":["ScrollViewGesture.tsx"],"sourcesContent":["import React from \"react\";\nimport type { StyleProp, ViewStyle } from \"react-native\";\nimport type { PanGestureHandlerGestureEvent } from \"react-native-gesture-handler\";\nimport {\n  PanGestureHandler,\n} from \"react-native-gesture-handler\";\nimport Animated, {\n  cancelAnimation,\n  measure,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedReaction,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n} from \"react-native-reanimated\";\n\nimport { Easing } from \"./constants\";\nimport { CTX } from \"./store\";\nimport type { WithTimingAnimation } from \"./types\";\nimport { dealWithAnimation } from \"./utils/dealWithAnimation\";\n\ninterface GestureContext extends Record<string, unknown> {\n  validStart: boolean\n  panOffset: number\n  max: number\n}\n\ninterface Props {\n  size: number\n  infinite?: boolean\n  testID?: string\n  style?: StyleProp<ViewStyle>\n  onScrollBegin?: () => void\n  onScrollEnd?: () => void\n  onTouchBegin?: () => void\n  onTouchEnd?: () => void\n  translation: Animated.SharedValue<number>\n}\n\nconst IScrollViewGesture: React.FC<Props> = (props) => {\n  const {\n    props: {\n      vertical,\n      pagingEnabled,\n      snapEnabled,\n      panGestureHandlerProps,\n      loop: infinite,\n      scrollAnimationDuration,\n      withAnimation,\n      enabled,\n      dataLength,\n      overscrollEnabled,\n      marginOffset = 0,\n    },\n  } = React.useContext(CTX);\n\n  const {\n    size,\n    translation,\n    testID,\n    style = {},\n    onScrollBegin,\n    onScrollEnd,\n    onTouchBegin,\n    onTouchEnd,\n  } = props;\n\n  const maxPage = dataLength;\n  const isHorizontal = useDerivedValue(() => !vertical, [vertical]);\n  const touching = useSharedValue(false);\n  const scrollEndTranslation = useSharedValue(0);\n  const scrollEndVelocity = useSharedValue(0);\n  const containerRef = useAnimatedRef<Animated.View>();\n\n  // Get the limit of the scroll.\n  const getLimit = React.useCallback(() => {\n    \"worklet\";\n\n    if (!infinite && !overscrollEnabled) {\n      const { width: containerWidth = 0 } = measure(containerRef);\n\n      // If the item's total width is less than the container's width, then there is no need to scroll.\n      if (dataLength * size < containerWidth)\n        return 0;\n\n      // Disable the \"overscroll\" effect\n      return dataLength * size - containerWidth + marginOffset;\n    }\n\n    return dataLength * size;\n  }, [infinite, size, dataLength, overscrollEnabled]);\n\n  const withSpring = React.useCallback(\n    (toValue: number, onFinished?: () => void) => {\n      \"worklet\";\n      const defaultWithAnimation: WithTimingAnimation = {\n        type: \"timing\",\n        config: {\n          duration: scrollAnimationDuration + 100,\n          easing: Easing.easeOutQuart,\n        },\n      };\n\n      return dealWithAnimation(withAnimation ?? defaultWithAnimation)(\n        toValue,\n        (isFinished: boolean) => {\n          \"worklet\";\n          if (isFinished)\n            onFinished && runOnJS(onFinished)();\n        },\n      );\n    },\n    [scrollAnimationDuration, withAnimation],\n  );\n\n  const endWithSpring = React.useCallback(\n    (onFinished?: () => void) => {\n      \"worklet\";\n      const origin = translation.value;\n      const velocity = scrollEndVelocity.value;\n      // Default to scroll in the direction of the slide (with deceleration)\n      let finalTranslation: number = withDecay({ velocity, deceleration: 0.999 });\n\n      /**\n       * The page size is the same as the item size.\n       * If direction is vertical, the page size is the height of the item.\n       * If direction is horizontal, the page size is the width of the item.\n       *\n       * `page size` equals to `size` variable.\n       * */\n      if (pagingEnabled) {\n        // distance with direction\n        const offset = -(scrollEndTranslation.value >= 0 ? 1 : -1); // 1 or -1\n        const computed = offset < 0 ? Math.ceil : Math.floor;\n        const page = computed(-translation.value / size);\n\n        if (infinite) {\n          const finalPage = page + offset;\n          finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n        }\n        else {\n          const finalPage = Math.min(maxPage - 1, Math.max(0, page + offset));\n          finalTranslation = withSpring(withProcessTranslation(-finalPage * size), onFinished);\n        }\n      }\n\n      if (!pagingEnabled && snapEnabled) {\n        // scroll to the nearest item\n        const nextPage = Math.round((origin + velocity * 0.4) / size) * size;\n        finalTranslation = withSpring(withProcessTranslation(nextPage), onFinished);\n      }\n\n      translation.value = finalTranslation;\n\n      function withProcessTranslation(translation: number) {\n        if (!infinite && !overscrollEnabled) {\n          const limit = getLimit();\n          const sign = Math.sign(translation);\n          return sign * Math.max(0, Math.min(limit, Math.abs(translation)));\n        }\n\n        return translation;\n      }\n    },\n    [\n      translation,\n      scrollEndVelocity.value,\n      pagingEnabled,\n      size,\n      scrollEndTranslation.value,\n      infinite,\n      withSpring,\n      snapEnabled,\n      maxPage,\n    ],\n  );\n\n  const onFinish = React.useCallback(\n    (isFinished: boolean) => {\n      \"worklet\";\n      if (isFinished) {\n        touching.value = false;\n        onScrollEnd && runOnJS(onScrollEnd)();\n      }\n    },\n    [onScrollEnd, touching],\n  );\n\n  const activeDecay = React.useCallback(() => {\n    \"worklet\";\n    touching.value = true;\n    translation.value = withDecay(\n      { velocity: scrollEndVelocity.value },\n      isFinished => onFinish(isFinished as boolean),\n    );\n  }, [onFinish, scrollEndVelocity.value, touching, translation]);\n\n  const resetBoundary = React.useCallback(() => {\n    \"worklet\";\n    if (touching.value)\n      return;\n\n    if (translation.value > 0) {\n      if (scrollEndTranslation.value < 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite) {\n        translation.value = withSpring(0);\n        return;\n      }\n    }\n\n    if (translation.value < -((maxPage - 1) * size)) {\n      if (scrollEndTranslation.value > 0) {\n        activeDecay();\n        return;\n      }\n      if (!infinite)\n        translation.value = withSpring(-((maxPage - 1) * size));\n    }\n  }, [\n    touching.value,\n    translation,\n    maxPage,\n    size,\n    scrollEndTranslation.value,\n    infinite,\n    activeDecay,\n    withSpring,\n  ]);\n\n  useAnimatedReaction(\n    () => translation.value,\n    () => {\n      if (!pagingEnabled)\n        resetBoundary();\n    },\n    [pagingEnabled, resetBoundary],\n  );\n\n  const panGestureEventHandler = useAnimatedGestureHandler<\n  PanGestureHandlerGestureEvent,\n  GestureContext\n  >(\n    {\n      onStart: (_, ctx) => {\n        touching.value = true;\n        ctx.validStart = true;\n        onScrollBegin && runOnJS(onScrollBegin)();\n\n        ctx.max = (maxPage - 1) * size;\n        if (!infinite && !overscrollEnabled)\n          ctx.max = getLimit();\n\n        ctx.panOffset = translation.value;\n      },\n      onActive: (e, ctx) => {\n        if (ctx.validStart) {\n          ctx.validStart = false;\n          cancelAnimation(translation);\n        }\n        touching.value = true;\n        const { translationX, translationY } = e;\n        const panTranslation = isHorizontal.value\n          ? translationX\n          : translationY;\n        if (!infinite) {\n          if ((translation.value > 0 || translation.value < -ctx.max)) {\n            const boundary = translation.value > 0 ? 0 : -ctx.max;\n            const fixed = boundary - ctx.panOffset;\n            const dynamic = panTranslation - fixed;\n            translation.value = boundary + dynamic * 0.5;\n            return;\n          }\n        }\n\n        const translationValue = ctx.panOffset + panTranslation;\n        translation.value = translationValue;\n      },\n      onEnd: (e) => {\n        const { velocityX, velocityY, translationX, translationY } = e;\n        scrollEndVelocity.value = isHorizontal.value\n          ? velocityX\n          : velocityY;\n        scrollEndTranslation.value = isHorizontal.value\n          ? translationX\n          : translationY;\n\n        endWithSpring(onScrollEnd);\n\n        if (!infinite)\n          touching.value = false;\n      },\n    },\n    [\n      pagingEnabled,\n      isHorizontal.value,\n      infinite,\n      maxPage,\n      size,\n      snapEnabled,\n      onScrollBegin,\n      onScrollEnd,\n    ],\n  );\n\n  return (\n    <PanGestureHandler\n      {...panGestureHandlerProps}\n      enabled={enabled}\n      onGestureEvent={panGestureEventHandler}\n    >\n      <Animated.View\n        ref={containerRef}\n        testID={testID}\n        style={style}\n        onTouchStart={onTouchBegin}\n        onTouchEnd={onTouchEnd}\n      >\n        {props.children}\n      </Animated.View>\n    </PanGestureHandler>\n  );\n};\n\nexport const ScrollViewGesture = IScrollViewGesture;\n"],"mappings":"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"}